<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xionger.qcb.dao.mapper.StockDao" >
  <resultMap id="BaseResultMap" type="com.xionger.qcb.model.Stock" >
    <id column="id" property="id" jdbcType="CHAR" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="codeName" property="codeName" jdbcType="VARCHAR" />
    <result column="newPrice" property="newPrice" jdbcType="DECIMAL" />
    <result column="amplitude" property="amplitude" jdbcType="DECIMAL" />
    <result column="amplitudePrice" property="amplitudePrice" jdbcType="DECIMAL" />
    <result column="buyPrice" property="buyPrice" jdbcType="DECIMAL" />
    <result column="salePrice" property="salePrice" jdbcType="DECIMAL" />
    <result column="dealVol" property="dealVol" jdbcType="BIGINT" />
    <result column="dealPrice" property="dealPrice" jdbcType="DECIMAL" />
    <result column="todayOpen" property="todayOpen" jdbcType="DECIMAL" />
    <result column="yeatedayClose" property="yeatedayClose" jdbcType="DECIMAL" />
    <result column="heightPrice" property="heightPrice" jdbcType="DECIMAL" />
    <result column="lowPrice" property="lowPrice" jdbcType="DECIMAL" />
    <result column="createDate" property="createDate" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    id,code,codeName,newPrice,amplitude,amplitudePrice,buyPrice,salePrice,dealVol,dealPrice,todayOpen,yeatedayClose,heightPrice,lowPrice,createDate
  </sql>
  
  <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_stock
    where id = #{id,jdbcType=CHAR}
  </select>
 
  <delete id="deleteById" parameterType="java.lang.String" >
    delete from t_stock
    where id = #{id,jdbcType=CHAR}
  </delete>
  
  <insert id="insert" parameterType="com.xionger.qcb.model.Stock" >
    insert into t_stock (
    	id,code,codeName,newPrice,amplitude,amplitudePrice,buyPrice,salePrice,dealVol,dealPrice,todayOpen,yeatedayClose,heightPrice,lowPrice,createDate
    )
    values (
    	#{id,jdbcType=CHAR}, #{code,jdbcType=VARCHAR}, #{codeName,jdbcType=VARCHAR}, 
        #{newPrice,jdbcType=DECIMAL}, #{amplitude,jdbcType=DECIMAL}, #{amplitudePrice,jdbcType=DECIMAL}, 
        #{buyPrice,jdbcType=DECIMAL},#{salePrice,jdbcType=DECIMAL}, #{dealVol,jdbcType=BIGINT}, 
        #{dealPrice,jdbcType=DECIMAL},#{todayOpen,jdbcType=DECIMAL}, #{yeatedayClose,jdbcType=DECIMAL}, 
        #{heightPrice,jdbcType=DECIMAL}, #{lowPrice,jdbcType=DECIMAL},#{createDate,jdbcType=VARCHAR}
    )
  </insert>
  
  <insert id="insertSelective" parameterType="com.xionger.qcb.model.Stock" >
    insert into t_stock
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="code != null" >
       code,
      </if>
      <if test="codeName != null" >
       codeName,
      </if>
      <if test="newPrice != null" >
       newPrice,
      </if>
      <if test="amplitude != null" >
       amplitude,
      </if>
      <if test="amplitudePrice != null" >
       amplitudePrice,
      </if>
      <if test="buyPrice != null" >
       buyPrice,
      </if>
      <if test="salePrice != null" >
       salePrice,
      </if>
      <if test="dealVol != null" >
       dealVol,
      </if>
      <if test="dealPrice != null" >
       dealPrice,
      </if>
      <if test="todayOpen != null" >
       todayOpen,
      </if>
      <if test="yeatedayClose != null" >
       yeatedayClose,
      </if>
      <if test="heightPrice != null" >
       heightPrice,
      </if>
      <if test="lowPrice != null" >
       lowPrice,
      </if>
      <if test="createDate != null" >
       createDate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=CHAR},
      </if>
      <if test="code != null" >
       #{code,jdbcType=VARCHAR},
      </if>
      <if test="codeName != null" >
        #{codeName,jdbcType=VARCHAR}, 
      </if>
      <if test="newPrice != null" >
        #{newPrice,jdbcType=DECIMAL}, 
      </if>
      <if test="amplitude != null" >
       #{amplitude,jdbcType=DECIMAL},
      </if>
      <if test="amplitudePrice != null" >
        #{amplitudePrice,jdbcType=DECIMAL},
      </if>
      <if test="buyPrice != null" >
        #{buyPrice,jdbcType=DECIMAL},
      </if>
      <if test="salePrice != null" >
       #{salePrice,jdbcType=DECIMAL}, 
      </if>
      <if test="dealVol != null" >
       #{dealVol,jdbcType=BIGINT},
      </if>
      <if test="dealPrice != null" >
        #{dealPrice,jdbcType=DECIMAL},
      </if>
      <if test="todayOpen != null" >
       #{todayOpen,jdbcType=DECIMAL}, 
      </if>
      <if test="yeatedayClose != null" >
       #{yeatedayClose,jdbcType=DECIMAL}, 
      </if>
      <if test="heightPrice != null" >
        #{heightPrice,jdbcType=DECIMAL},
      </if>
      <if test="lowPrice != null" >
        #{lowPrice,jdbcType=DECIMAL},
      </if>
      <if test="createDate != null" >
       #{createDate,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  
  
  <delete id="deleteStockListByDataDate" parameterType="java.lang.String" >
    delete from t_stock
    where createDate = #{dataDate,jdbcType=VARCHAR}
  </delete>
  
  <delete id="deleteStockListByStartAndEnd" parameterType="java.util.HashMap" >
    delete from t_stock
    where createDate <![CDATA[>=]]> #{start,jdbcType=VARCHAR} and createDate <![CDATA[<=]]> #{end,jdbcType=VARCHAR}
  </delete>
  
  
  <select id="selectListByCreateDate" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_stock
    where createDate = #{createDate,jdbcType=VARCHAR}
  </select>
  
  <select id="select20ListByCodeAndCreateDateOrderCreateDateDesc" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
    select 
	<include refid="Base_Column_List" /> 
	from t_stock t where t.`code`=#{code,jdbcType=VARCHAR} and t.newPrice <![CDATA[>]]> 0.00 and t.createDate <![CDATA[<=]]> #{createDate,jdbcType=VARCHAR} ORDER BY t.createDate desc LIMIT 20
  </select>
  
  
  <select id="selectListByCodeAndCreateDateAsc" resultMap="BaseResultMap" parameterType="com.xionger.qcb.model.Stock" >
    select 
	<include refid="Base_Column_List" /> 
	from t_stock t where t.`code`=#{code,jdbcType=VARCHAR} and t.createDate <![CDATA[>]]> #{createDate,jdbcType=VARCHAR} ORDER BY t.createDate asc
  </select>
  
  <select id="selectByCodeAndBeforCreateDateDescOne" resultMap="BaseResultMap" parameterType="com.xionger.qcb.model.Stock" >
    select 
	<include refid="Base_Column_List" /> 
	from t_stock t where t.`code`=#{code,jdbcType=VARCHAR} and t.createDate <![CDATA[<]]> #{createDate,jdbcType=VARCHAR} ORDER BY t.createDate desc LIMIT 1
  </select>
  
  <select id="select20WeekListByCodeAndCreateDateOrderCreateDateDesc" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
    select 
	<include refid="Base_Column_List" /> 
	from t_stock t where t.`code`=#{code,jdbcType=VARCHAR} 
					and  t.newPrice <![CDATA[>]]> 0.00  
					and  t.createDate <![CDATA[<=]]> #{createDate,jdbcType=VARCHAR}
					and  exists (select 1 from t_stock_date a where a.is_end_week_day='00' and t.createDate=a.stock_date)
					ORDER BY t.createDate desc LIMIT 20
  </select>
  
  
  <select id="select1ByCreateDateDesc" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
    select 
    <include refid="Base_Column_List" />
    from t_stock t
    where t.`code`=#{code,jdbcType=VARCHAR} and t.newPrice <![CDATA[>]]> 0.00 and t.createDate <![CDATA[<=]]> #{createDate,jdbcType=VARCHAR} ORDER BY t.createDate desc LIMIT 1
  </select>
  
  <select id="selectStockChangeBy01" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
    SELECT
		t.*
	FROM
		t_stock y,
		t_stock t
	WHERE
		y.createDate = #{lastTradeDate,jdbcType=VARCHAR}
	AND t.createDate = #{todayTradeDate,jdbcType=VARCHAR}
	AND y.`code` = t.`code`
	and (t.dealVol/y.dealVol) <![CDATA[>=]]> 2
	and t.newPrice <![CDATA[>]]> t.todayOpen
	and t.todayOpen <![CDATA[>]]> t.yeatedayClose
	and t.todayOpen=t.lowPrice
	and t.newPrice=t.heightPrice 
	AND t.codeName not like '%st%'
	and y.newPrice <![CDATA[>]]> y.todayOpen
  </select>
  
  
  <select id="selectStockChangeBy02" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
	SELECT
		t.*
	FROM
		t_stock y,
		t_stock t
	WHERE
		y.createDate = #{lastTradeDate,jdbcType=VARCHAR}
	AND t.createDate = #{todayTradeDate,jdbcType=VARCHAR}
	AND y.`code` = t.`code`
	and (t.dealVol/y.dealVol)<![CDATA[>=]]> 2
	and t.newPrice <![CDATA[<]]> t.todayOpen
	and t.todayOpen <![CDATA[>]]> t.yeatedayClose
	and t.todayOpen=t.heightPrice 
	and (t.todayOpen-t.newPrice) <![CDATA[>]]> ((t.newPrice-t.lowPrice)*5)
	AND t.codeName not like '%st%'
	and y.newPrice <![CDATA[>]]> y.todayOpen
  </select>
  
  <select id="selectStockChangeBy04" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
	SELECT
		t.*
	FROM
		t_stock y,
		t_stock t
	WHERE
		y.createDate = #{lastTradeDate,jdbcType=VARCHAR}
	AND t.createDate = #{todayTradeDate,jdbcType=VARCHAR}
	AND y.`code` = t.`code`
	and t.codeName not like '%st%'
	and t.dealVol <![CDATA[>]]> y.dealVol
    and t.newPrice <![CDATA[>=]]> y.newPrice
	and (
			(y.newPrice <![CDATA[>]]> y.todayOpen and ((y.todayOpen-y.lowPrice) <![CDATA[>]]> ((y.newPrice-y.todayOpen)*2)) and ((y.newPrice-y.todayOpen) <![CDATA[>]]> (y.heightPrice-y.newPrice))) 
		or 
			(y.newPrice <![CDATA[<]]> y.todayOpen and ((y.newPrice-y.lowPrice) <![CDATA[>]]> ((y.todayOpen-y.newPrice)*2)) and ((y.todayOpen-y.newPrice) <![CDATA[>]]> (y.heightPrice-y.todayOpen)))
		)
	and (
			(t.newPrice <![CDATA[>]]> t.todayOpen and ((t.heightPrice-t.newPrice) <![CDATA[>]]> ((t.newPrice-t.todayOpen)*2)) and ((t.newPrice-t.todayOpen) <![CDATA[>]]> (t.todayOpen-t.lowPrice)))
		or
			(t.newPrice <![CDATA[<]]> t.todayOpen and ((t.heightPrice-t.todayOpen) <![CDATA[>]]> ((t.todayOpen-t.newPrice)*2)) and ((t.todayOpen-t.newPrice) <![CDATA[>]]> (t.newPrice-t.lowPrice)))
		)
  </select>
  
  <select id="selectStockChangeBy05" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
	SELECT
		t.*
	FROM
		t_stock y,
		t_stock t
	WHERE
		y.createDate = #{lastTradeDate,jdbcType=VARCHAR}
	AND t.createDate = #{todayTradeDate,jdbcType=VARCHAR}
	AND y.`code` = t.`code`
	and t.codeName not like '%st%'
	and (
				(y.newPrice <![CDATA[>]]> y.todayOpen and ((y.heightPrice-y.newPrice) <![CDATA[>]]> ((y.newPrice-y.todayOpen)*5)) and ((y.heightPrice-y.newPrice) <![CDATA[>]]> (y.todayOpen-y.lowPrice))) 
		or 
				(y.newPrice <![CDATA[<]]> y.todayOpen and ((y.heightPrice-y.todayOpen) <![CDATA[>]]> ((y.todayOpen-y.newPrice)*5)) and ((y.heightPrice-y.todayOpen) <![CDATA[>]]> (y.newPrice-y.lowPrice)))
			)
	and (
				(t.newPrice <![CDATA[>]]> t.todayOpen and ((t.todayOpen-t.lowPrice) <![CDATA[>]]> ((t.newPrice-t.todayOpen)*5)) and ((t.todayOpen-t.lowPrice) <![CDATA[>]]> (t.heightPrice-t.newPrice)))
		or
				(t.newPrice <![CDATA[<]]> t.todayOpen and ((t.newPrice-t.lowPrice) <![CDATA[>]]> ((t.todayOpen-t.newPrice)*5)) and ((t.newPrice-t.lowPrice) <![CDATA[>]]> (t.heightPrice-t.todayOpen)))
			)
  </select>
  
  <select id="selectStockChangeBy03" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
	SELECT
		g.*
	FROM
		t_stock a,
		t_stock b,
		t_stock c,
		t_stock d,
		t_stock e,
		t_stock f,
		t_stock g
	WHERE
		a.createDate = #{last6TradeDate,jdbcType=VARCHAR}
	AND b.createDate = #{last5TradeDate,jdbcType=VARCHAR}
	AND c.createDate = #{last4TradeDate,jdbcType=VARCHAR}
	AND d.createDate = #{last3TradeDate,jdbcType=VARCHAR}
	AND e.createDate = #{last2TradeDate,jdbcType=VARCHAR}
	AND f.createDate = #{lastTradeDate,jdbcType=VARCHAR}
	AND g.createDate = #{todayTradeDate,jdbcType=VARCHAR}
	AND a.`code` = b.`code`
	AND b.`code` = c.`code`
	AND c.`code` = d.`code`
	AND d.`code` = e.`code`
	AND e.`code` = f.`code`
	AND f.`code` = g.`code`
	AND g.codeName NOT LIKE '%st%'
	AND(a.newPrice - a.todayOpen)<![CDATA[>]]> 0
	AND(
		(b.newPrice - b.todayOpen)<![CDATA[>]]> 0
		OR b.heightPrice <![CDATA[>]]> a.heightPrice
	)
	AND(
		(c.newPrice - c.todayOpen)<![CDATA[>]]> 0
		OR(
			c.heightPrice <![CDATA[>]]> b.heightPrice
			AND b.heightPrice <![CDATA[>]]> a.heightPrice
		)
	)
	AND(
		(d.newPrice - d.todayOpen)<![CDATA[>]]> 0
		OR(
			d.heightPrice <![CDATA[>]]> c.heightPrice
			AND c.heightPrice <![CDATA[>]]> b.heightPrice
			AND b.heightPrice <![CDATA[>]]> a.heightPrice
		)
	)
	AND(
		(e.newPrice - e.todayOpen)<![CDATA[>]]> 0
		OR(
			e.heightPrice <![CDATA[>]]> d.heightPrice
			AND d.heightPrice <![CDATA[>]]> c.heightPrice
			AND c.heightPrice <![CDATA[>]]> b.heightPrice
			AND b.heightPrice <![CDATA[>]]> a.heightPrice
		)
	)
	AND(
		(f.newPrice - f.todayOpen) <![CDATA[>]]> 0
		OR(
			f.heightPrice <![CDATA[>]]> e.heightPrice
			AND e.heightPrice <![CDATA[>]]> d.heightPrice
			AND d.heightPrice <![CDATA[>]]> c.heightPrice
			AND c.heightPrice <![CDATA[>]]> b.heightPrice
			AND b.heightPrice <![CDATA[>]]> a.heightPrice
		)
	)
	AND(
		(g.newPrice - g.todayOpen) <![CDATA[>]]> 0
		OR(
			g.heightPrice <![CDATA[>]]> f.heightPrice
			AND f.heightPrice <![CDATA[>]]> e.heightPrice
			AND e.heightPrice <![CDATA[>]]> d.heightPrice
			AND d.heightPrice <![CDATA[>]]> c.heightPrice
			AND c.heightPrice <![CDATA[>]]> b.heightPrice
			AND b.heightPrice <![CDATA[>]]> a.heightPrice
		)
	)
  </select>
  
  
  <select id="selectStockRecoverBy01" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
    SELECT
		t.*
	FROM
		t_stock y,
		t_stock t
	WHERE
		y.createDate = #{lastTradeDate,jdbcType=VARCHAR}
	AND t.createDate = #{todayTradeDate,jdbcType=VARCHAR}
	and y.`code`=t.`code`
	and t.codeName not like '%st%'
	and t.todayOpen <![CDATA[<]]> t.yeatedayClose
	and t.newPrice <![CDATA[<]]> t.yeatedayClose
	and (
	(t.newPrice <![CDATA[>]]> t.todayOpen and (t.todayOpen-t.lowPrice) <![CDATA[>]]> ((t.newPrice-t.todayOpen)*3) and (t.newPrice-t.todayOpen) <![CDATA[>]]> ((t.heightPrice-t.newPrice)*5))
	OR
	(t.newPrice <![CDATA[<]]> t.todayOpen and (t.newPrice-t.lowPrice) <![CDATA[>]]> ((t.todayOpen-t.newPrice)*3) and (t.todayOpen-t.newPrice) <![CDATA[>]]> ((t.heightPrice-t.todayOpen)*5))
	)
  </select>
  
  
  <select id="selectStockRecoverBy02" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
    SELECT
		t.*
	FROM
		t_stock y,
		t_stock t
	WHERE
		y.createDate = #{lastTradeDate,jdbcType=VARCHAR}
	AND t.createDate = #{todayTradeDate,jdbcType=VARCHAR}
	AND y.`code` = t.`code`
	AND t.codeName NOT LIKE '%st%'
	AND t.todayOpen <![CDATA[<]]> t.yeatedayClose
	AND t.newPrice <![CDATA[<]]> t.yeatedayClose
	AND t.todayOpen = t.lowPrice
	AND t.newPrice <![CDATA[>]]> t.todayOpen
	AND t.dealVol <![CDATA[>]]> y.dealVol
	AND(t.heightPrice - t.newPrice) <![CDATA[>]]> ((t.newPrice - t.todayOpen) * 2)
  </select>
  
  <select id="selectStockRecoverBy03" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
    SELECT
		t.*
	FROM
		t_stock y,
		t_stock t
	WHERE
		y.createDate = #{lastTradeDate,jdbcType=VARCHAR}
	AND t.createDate = #{todayTradeDate,jdbcType=VARCHAR}
	AND y.`code` = t.`code`
	AND t.codeName NOT LIKE '%st%'
	AND t.newPrice <![CDATA[>]]> y.todayOpen
	AND t.newPrice <![CDATA[>]]> y.newPrice
	AND t.dealVol <![CDATA[>]]> y.dealVol
	AND t.newPrice <![CDATA[>]]> t.todayOpen
	AND t.todayOpen = t.lowPrice
	AND(t.heightPrice - t.newPrice) <![CDATA[>]]> ((t.newPrice - t.todayOpen) * 2)
	AND(
		(
			y.newPrice <![CDATA[>]]> y.todayOpen
			AND(y.todayOpen - y.lowPrice) <![CDATA[>]]> ((y.newPrice - y.todayOpen) * 3)
			AND(y.newPrice - y.todayOpen) <![CDATA[>]]> (
				(y.heightPrice - y.newPrice)* 5
			)
		)
		OR(
			y.newPrice <![CDATA[<]]> y.todayOpen
			AND(y.newPrice - y.lowPrice) <![CDATA[>]]> ((y.todayOpen - y.newPrice) * 3)
			AND(y.todayOpen - y.newPrice) <![CDATA[>]]> (
				(y.heightPrice - y.todayOpen)* 5
			)
		)
	)
  </select>
  
  <select id="selectStockRecoverBy04" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
    SELECT
		t.*
	FROM
		t_stock y,
		t_stock t
	WHERE
		y.createDate = #{lastTradeDate,jdbcType=VARCHAR}
	AND t.createDate = #{todayTradeDate,jdbcType=VARCHAR}
	AND y.`code` = t.`code`
	AND t.codeName NOT LIKE '%st%'
	AND t.todayOpen <![CDATA[<]]> t.yeatedayClose
	AND t.newPrice <![CDATA[<]]> t.yeatedayClose
	AND t.heightPrice <![CDATA[<>]]> t.todayOpen
	AND t.heightPrice <![CDATA[<>]]> t.newPrice
	AND(
		t.todayOpen = t.newPrice
		OR(t.todayOpen - t.newPrice)= 0.01
		OR(t.newPrice - t.todayOpen)= 0.01
	)
	AND t.dealVol <![CDATA[>]]> y.dealVol
	AND(
		(
			t.newPrice <![CDATA[>=]]> t.todayOpen
			AND(t.todayOpen - t.lowPrice) <![CDATA[>]]> (
				(t.heightPrice - t.newPrice)* 3
			)
		)
		OR(
			t.newPrice <![CDATA[<]]> t.todayOpen
			AND(t.newPrice - t.lowPrice) <![CDATA[>]]> (
				(t.heightPrice - t.todayOpen)* 3
			)
		)
	)
  </select>
  
  <select id="selectStockRecoverBy05" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
    SELECT
		t.*
	FROM
		t_stock y,
		t_stock t
	WHERE
		y.createDate = #{lastTradeDate,jdbcType=VARCHAR}
	AND t.createDate = #{todayTradeDate,jdbcType=VARCHAR}
	AND y.`code` = t.`code`
	AND t.codeName NOT LIKE '%st%'
	AND y.newPrice <![CDATA[<]]> y.todayOpen
	AND t.newPrice <![CDATA[<]]> t.yeatedayClose
	AND t.todayOpen <![CDATA[<]]> t.yeatedayClose
	AND t.newPrice <![CDATA[<>]]> t.todayOpen
	AND t.dealVol <![CDATA[>]]> y.dealVol
	AND t.heightPrice <![CDATA[>=]]> (
		y.newPrice +(y.todayOpen - y.newPrice)/ 2
	)
	AND(
		(
			t.newPrice <![CDATA[>]]> t.todayOpen
			AND(t.heightPrice - t.newPrice) <![CDATA[>]]> (t.newPrice - t.todayOpen)
			AND(t.todayOpen - t.lowPrice) <![CDATA[>]]> (t.heightPrice - t.newPrice)
		)
		OR(
			t.newPrice <![CDATA[<]]> t.todayOpen
			AND(t.heightPrice - t.todayOpen) <![CDATA[>]]> (t.todayOpen - t.newPrice)
			AND(t.newPrice - t.lowPrice) <![CDATA[>]]> (t.heightPrice - t.todayOpen)
		)
	)
  </select>
  
  <select id="selectStockRecoverBy06" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
    SELECT
		t.*
	FROM
		t_stock y,
		t_stock t
	WHERE
		y.createDate = #{lastTradeDate,jdbcType=VARCHAR}
	AND t.createDate = #{todayTradeDate,jdbcType=VARCHAR}
	AND y.`code` = t.`code`
	AND t.codeName NOT LIKE '%st%'
	AND y.newPrice <![CDATA[<]]> t.todayOpen
	AND y.lowPrice <![CDATA[<]]> y.newPrice
	AND t.newPrice <![CDATA[>]]> t.todayOpen
	AND t.lowPrice <![CDATA[>]]> y.lowPrice
	AND t.heightPrice <![CDATA[<]]> y.todayOpen
	AND t.dealVol <![CDATA[<]]> y.dealVol
	AND(y.newPrice - y.lowPrice) <![CDATA[>]]> (t.newPrice - t.todayOpen)
	AND(y.newPrice - y.lowPrice) <![CDATA[>]]> (y.heightPrice - y.todayOpen)
  </select>
  
  <select id="selectStockRecoverBy07" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
    SELECT
		t.*
	FROM
		t_stock y,
		t_stock t
	WHERE
		y.createDate = #{lastTradeDate,jdbcType=VARCHAR}
	AND t.createDate = #{todayTradeDate,jdbcType=VARCHAR}
	AND y.`code` = t.`code`
	AND t.codeName NOT LIKE '%st%'
	AND t.todayOpen <![CDATA[<]]> y.lowPrice
	AND t.newPrice <![CDATA[>]]> y.heightPrice
	AND t.dealVol <![CDATA[>]]> (y.dealVol * 1.5)
  </select>
  
</mapper>