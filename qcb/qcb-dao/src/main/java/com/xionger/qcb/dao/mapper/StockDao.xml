<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xionger.qcb.dao.mapper.StockDao" >
  <resultMap id="BaseResultMap" type="com.xionger.qcb.model.Stock" >
    <id column="id" property="id" jdbcType="CHAR" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="code_name" property="codeName" jdbcType="VARCHAR" />
    <result column="new_price" property="newPrice" jdbcType="DECIMAL" />
    <result column="amplitude" property="amplitude" jdbcType="DECIMAL" />
    <result column="amplitude_price" property="amplitudePrice" jdbcType="DECIMAL" />
    <result column="buy_price" property="buyPrice" jdbcType="DECIMAL" />
    <result column="sale_price" property="salePrice" jdbcType="DECIMAL" />
    <result column="deal_vol" property="dealVol" jdbcType="BIGINT" />
    <result column="deal_price" property="dealPrice" jdbcType="DECIMAL" />
    <result column="today_open" property="todayOpen" jdbcType="DECIMAL" />
    <result column="yeateday_close" property="yeatedayClose" jdbcType="DECIMAL" />
    <result column="height_price" property="heightPrice" jdbcType="DECIMAL" />
    <result column="low_price" property="lowPrice" jdbcType="DECIMAL" />
    <result column="create_date" property="createDate" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, code, code_name, new_price, amplitude, amplitude_price, buy_price, sale_price, 
    deal_vol, deal_price, today_open, yeateday_close, height_price, low_price, create_date
  </sql>
  
  <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_stock
    where id = #{id,jdbcType=CHAR}
  </select>
 
  <delete id="deleteById" parameterType="java.lang.String" >
    delete from t_stock
    where id = #{id,jdbcType=CHAR}
  </delete>
  
   <insert id="insert" parameterType="com.xionger.qcb.model.Stock" >
    insert into t_stock (id, code, code_name, 
      new_price, amplitude, amplitude_price, 
      buy_price, sale_price, deal_vol, 
      deal_price, today_open, yeateday_close, 
      height_price, low_price, create_date
      )
    values (#{id,jdbcType=CHAR}, #{code,jdbcType=VARCHAR}, #{codeName,jdbcType=VARCHAR}, 
      #{newPrice,jdbcType=DECIMAL}, #{amplitude,jdbcType=DECIMAL}, #{amplitudePrice,jdbcType=DECIMAL}, 
      #{buyPrice,jdbcType=DECIMAL}, #{salePrice,jdbcType=DECIMAL}, #{dealVol,jdbcType=BIGINT}, 
      #{dealPrice,jdbcType=DECIMAL}, #{todayOpen,jdbcType=DECIMAL}, #{yeatedayClose,jdbcType=DECIMAL}, 
      #{heightPrice,jdbcType=DECIMAL}, #{lowPrice,jdbcType=DECIMAL}, #{createDate,jdbcType=VARCHAR}
      )
  </insert>
  
  <insert id="insertSelective" parameterType="com.xionger.qcb.model.Stock" >
    insert into t_stock
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="codeName != null" >
        code_name,
      </if>
      <if test="newPrice != null" >
        new_price,
      </if>
      <if test="amplitude != null" >
        amplitude,
      </if>
      <if test="amplitudePrice != null" >
        amplitude_price,
      </if>
      <if test="buyPrice != null" >
        buy_price,
      </if>
      <if test="salePrice != null" >
        sale_price,
      </if>
      <if test="dealVol != null" >
        deal_vol,
      </if>
      <if test="dealPrice != null" >
        deal_price,
      </if>
      <if test="todayOpen != null" >
        today_open,
      </if>
      <if test="yeatedayClose != null" >
        yeateday_close,
      </if>
      <if test="heightPrice != null" >
        height_price,
      </if>
      <if test="lowPrice != null" >
        low_price,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=CHAR},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="codeName != null" >
        #{codeName,jdbcType=VARCHAR},
      </if>
      <if test="newPrice != null" >
        #{newPrice,jdbcType=DECIMAL},
      </if>
      <if test="amplitude != null" >
        #{amplitude,jdbcType=DECIMAL},
      </if>
      <if test="amplitudePrice != null" >
        #{amplitudePrice,jdbcType=DECIMAL},
      </if>
      <if test="buyPrice != null" >
        #{buyPrice,jdbcType=DECIMAL},
      </if>
      <if test="salePrice != null" >
        #{salePrice,jdbcType=DECIMAL},
      </if>
      <if test="dealVol != null" >
        #{dealVol,jdbcType=BIGINT},
      </if>
      <if test="dealPrice != null" >
        #{dealPrice,jdbcType=DECIMAL},
      </if>
      <if test="todayOpen != null" >
        #{todayOpen,jdbcType=DECIMAL},
      </if>
      <if test="yeatedayClose != null" >
        #{yeatedayClose,jdbcType=DECIMAL},
      </if>
      <if test="heightPrice != null" >
        #{heightPrice,jdbcType=DECIMAL},
      </if>
      <if test="lowPrice != null" >
        #{lowPrice,jdbcType=DECIMAL},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.xionger.qcb.model.Stock" >
	    update t_stock
	    <set >
	      <if test="code != null" >
	        code = #{code,jdbcType=VARCHAR},
	      </if>
	      <if test="codeName != null" >
	        code_name = #{codeName,jdbcType=VARCHAR},
	      </if>
	      <if test="newPrice != null" >
	        new_price = #{newPrice,jdbcType=DECIMAL},
	      </if>
	      <if test="amplitude != null" >
	        amplitude = #{amplitude,jdbcType=DECIMAL},
	      </if>
	      <if test="amplitudePrice != null" >
	        amplitude_price = #{amplitudePrice,jdbcType=DECIMAL},
	      </if>
	      <if test="buyPrice != null" >
	        buy_price = #{buyPrice,jdbcType=DECIMAL},
	      </if>
	      <if test="salePrice != null" >
	        sale_price = #{salePrice,jdbcType=DECIMAL},
	      </if>
	      <if test="dealVol != null" >
	        deal_vol = #{dealVol,jdbcType=BIGINT},
	      </if>
	      <if test="dealPrice != null" >
	        deal_price = #{dealPrice,jdbcType=DECIMAL},
	      </if>
	      <if test="todayOpen != null" >
	        today_open = #{todayOpen,jdbcType=DECIMAL},
	      </if>
	      <if test="yeatedayClose != null" >
	        yeateday_close = #{yeatedayClose,jdbcType=DECIMAL},
	      </if>
	      <if test="heightPrice != null" >
	        height_price = #{heightPrice,jdbcType=DECIMAL},
	      </if>
	      <if test="lowPrice != null" >
	        low_price = #{lowPrice,jdbcType=DECIMAL},
	      </if>
	      <if test="createDate != null" >
	        create_date = #{createDate,jdbcType=VARCHAR},
	      </if>
	    </set>
	    where id = #{id,jdbcType=CHAR}
	  </update>
  
  
  <delete id="deleteStockListByDataDate" parameterType="java.lang.String" >
    delete from t_stock
    where create_date = #{dataDate,jdbcType=VARCHAR}
  </delete>
  
  <delete id="deleteStockListByStartAndEnd" parameterType="java.util.HashMap" >
    delete from t_stock
    where create_date <![CDATA[>=]]> #{start,jdbcType=VARCHAR} and create_date <![CDATA[<=]]> #{end,jdbcType=VARCHAR}
  </delete>
  
  
  <select id="selectListByCreateDate" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_stock
    where create_date = #{createDate,jdbcType=VARCHAR}
  </select>
  
  <select id="select20ListByCodeAndCreateDateOrderCreateDateDesc" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
    select 
	<include refid="Base_Column_List" /> 
	from t_stock t where t.`code`=#{code,jdbcType=VARCHAR} and t.new_price <![CDATA[>]]> 0.00 and t.create_date <![CDATA[<=]]> #{createDate,jdbcType=VARCHAR} ORDER BY t.create_date desc LIMIT 20
  </select>
  
  
  <select id="selectListByCodeAndCreateDateAsc" resultMap="BaseResultMap" parameterType="com.xionger.qcb.model.Stock" >
    select 
	<include refid="Base_Column_List" /> 
	from t_stock t where t.`code`=#{code,jdbcType=VARCHAR} and t.create_date <![CDATA[>]]> #{createDate,jdbcType=VARCHAR} ORDER BY t.create_date asc
  </select>
  
  <select id="selectByCodeAndBeforCreateDateDescOne" resultMap="BaseResultMap" parameterType="com.xionger.qcb.model.Stock" >
    select 
	<include refid="Base_Column_List" /> 
	from t_stock t where t.`code`=#{code,jdbcType=VARCHAR} and t.create_date <![CDATA[<]]> #{createDate,jdbcType=VARCHAR} ORDER BY t.create_date desc LIMIT 1
  </select>
  
  <select id="select20WeekListByCodeAndCreateDateOrderCreateDateDesc" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
    select 
	<include refid="Base_Column_List" /> 
	from t_stock t where t.`code`=#{code,jdbcType=VARCHAR} 
					and  t.new_price <![CDATA[>]]> 0.00  
					and  t.create_date <![CDATA[<=]]> #{createDate,jdbcType=VARCHAR}
					and  exists (select 1 from t_stock_date a where a.is_end_week_day='00' and t.create_date=a.stock_date)
					ORDER BY t.create_date desc LIMIT 20
  </select>
  
  
  <select id="select1ByCreateDateDesc" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
    select 
    <include refid="Base_Column_List" />
    from t_stock t
    where t.`code`=#{code,jdbcType=VARCHAR} and t.new_price <![CDATA[>]]> 0.00 and t.create_date <![CDATA[<=]]> #{createDate,jdbcType=VARCHAR} ORDER BY t.create_date desc LIMIT 1
  </select>
  
  <select id="selectStockChangeBy01" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
    SELECT
		t.*
	FROM
		t_stock y,
		t_stock t
	WHERE
		y.create_date = #{lastTradeDate,jdbcType=VARCHAR}
	AND t.create_date = #{todayTradeDate,jdbcType=VARCHAR}
	AND y.`code` = t.`code`
	and (t.deal_vol/y.deal_vol) <![CDATA[>=]]> 2
	and t.new_price <![CDATA[>]]> t.today_open
	and t.today_open <![CDATA[>]]> t.yeateday_close
	and t.today_open=t.low_price
	and t.new_price=t.height_price 
	AND t.code_name not like '%st%'
	and y.new_price <![CDATA[>]]> y.today_open
  </select>
  
  
  <select id="selectStockChangeBy02" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
	SELECT
		t.*
	FROM
		t_stock y,
		t_stock t
	WHERE
		y.create_Date = #{lastTradeDate,jdbcType=VARCHAR}
	AND t.create_Date = #{todayTradeDate,jdbcType=VARCHAR}
	AND y.`code` = t.`code`
	and (t.deal_Vol/y.deal_Vol)<![CDATA[>=]]> 2
	and t.new_Price <![CDATA[<]]> t.today_Open
	and t.today_Open <![CDATA[>]]> t.yeateday_Close
	and t.today_Open=t.height_Price 
	and (t.today_Open-t.new_Price) <![CDATA[>]]> ((t.new_Price-t.low_Price)*5)
	AND t.code_Name not like '%st%'
	and y.new_Price <![CDATA[>]]> y.today_Open
  </select>
  
  <select id="selectStockChangeBy04" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
	SELECT
		t.*
	FROM
		t_stock y,
		t_stock t
	WHERE
		y.create_Date = #{lastTradeDate,jdbcType=VARCHAR}
	AND t.create_Date = #{todayTradeDate,jdbcType=VARCHAR}
	AND y.`code` = t.`code`
	and t.code_Name not like '%st%'
	and t.deal_Vol <![CDATA[>]]> y.deal_Vol
    and t.new_Price <![CDATA[>=]]> y.new_Price
	and (
			(y.new_Price <![CDATA[>]]> y.today_Open and ((y.today_Open-y.low_Price) <![CDATA[>]]> ((y.new_Price-y.today_Open)*2)) and ((y.new_Price-y.today_Open) <![CDATA[>]]> (y.height_Price-y.new_Price))) 
		or 
			(y.new_Price <![CDATA[<]]> y.today_Open and ((y.new_Price-y.low_Price) <![CDATA[>]]> ((y.today_Open-y.new_Price)*2)) and ((y.today_Open-y.new_Price) <![CDATA[>]]> (y.height_Price-y.today_Open)))
		)
	and (
			(t.new_Price <![CDATA[>]]> t.today_Open and ((t.height_Price-t.new_Price) <![CDATA[>]]> ((t.new_Price-t.today_Open)*2)) and ((t.new_Price-t.today_Open) <![CDATA[>]]> (t.today_Open-t.low_Price)))
		or
			(t.new_Price <![CDATA[<]]> t.today_Open and ((t.height_Price-t.today_Open) <![CDATA[>]]> ((t.today_Open-t.new_Price)*2)) and ((t.today_Open-t.new_Price) <![CDATA[>]]> (t.new_Price-t.low_Price)))
		)
  </select>
  
  <select id="selectStockChangeBy05" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
	SELECT
		t.*
	FROM
		t_stock y,
		t_stock t
	WHERE
		y.create_Date = #{lastTradeDate,jdbcType=VARCHAR}
	AND t.create_Date = #{todayTradeDate,jdbcType=VARCHAR}
	AND y.`code` = t.`code`
	and t.code_Name not like '%st%'
	and (
				(y.new_Price <![CDATA[>]]> y.today_Open and ((y.height_Price-y.new_Price) <![CDATA[>]]> ((y.new_Price-y.today_Open)*5)) and ((y.height_Price-y.new_Price) <![CDATA[>]]> (y.today_Open-y.low_Price))) 
		or 
				(y.new_Price <![CDATA[<]]> y.today_Open and ((y.height_Price-y.today_Open) <![CDATA[>]]> ((y.today_Open-y.new_Price)*5)) and ((y.height_Price-y.today_Open) <![CDATA[>]]> (y.new_Price-y.low_Price)))
			)
	and (
				(t.new_Price <![CDATA[>]]> t.today_Open and ((t.today_Open-t.low_Price) <![CDATA[>]]> ((t.new_Price-t.today_Open)*5)) and ((t.today_Open-t.low_Price) <![CDATA[>]]> (t.height_Price-t.new_Price)))
		or
				(t.new_Price <![CDATA[<]]> t.today_Open and ((t.new_Price-t.low_Price) <![CDATA[>]]> ((t.today_Open-t.new_Price)*5)) and ((t.new_Price-t.low_Price) <![CDATA[>]]> (t.height_Price-t.today_Open)))
			)
  </select>
  
  <select id="selectStockChangeBy03" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
	SELECT
		g.*
	FROM
		t_stock a,
		t_stock b,
		t_stock c,
		t_stock d,
		t_stock e,
		t_stock f,
		t_stock g
	WHERE
		a.create_Date = #{last6TradeDate,jdbcType=VARCHAR}
	AND b.create_Date = #{last5TradeDate,jdbcType=VARCHAR}
	AND c.create_Date = #{last4TradeDate,jdbcType=VARCHAR}
	AND d.create_Date = #{last3TradeDate,jdbcType=VARCHAR}
	AND e.create_Date = #{last2TradeDate,jdbcType=VARCHAR}
	AND f.create_Date = #{lastTradeDate,jdbcType=VARCHAR}
	AND g.create_Date = #{todayTradeDate,jdbcType=VARCHAR}
	AND a.`code` = b.`code`
	AND b.`code` = c.`code`
	AND c.`code` = d.`code`
	AND d.`code` = e.`code`
	AND e.`code` = f.`code`
	AND f.`code` = g.`code`
	AND g.code_Name NOT LIKE '%st%'
	AND(a.new_Price - a.todayOpen)<![CDATA[>]]> 0
	AND(
		(b.new_Price - b.today_Open)<![CDATA[>]]> 0
		OR b.height_Price <![CDATA[>]]> a.height_Price
	)
	AND(
		(c.new_Price - c.today_Open)<![CDATA[>]]> 0
		OR(
			c.height_Price <![CDATA[>]]> b.height_Price
			AND b.height_Price <![CDATA[>]]> a.height_Price
		)
	)
	AND(
		(d.new_Price - d.today_Open)<![CDATA[>]]> 0
		OR(
			d.height_Price <![CDATA[>]]> c.height_Price
			AND c.height_Price <![CDATA[>]]> b.height_Price
			AND b.height_Price <![CDATA[>]]> a.height_Price
		)
	)
	AND(
		(e.new_Price - e.today_Open)<![CDATA[>]]> 0
		OR(
			e.height_Price <![CDATA[>]]> d.height_Price
			AND d.height_Price <![CDATA[>]]> c.height_Price
			AND c.height_Price <![CDATA[>]]> b.height_Price
			AND b.height_Price <![CDATA[>]]> a.height_Price
		)
	)
	AND(
		(f.new_Price - f.today_Open) <![CDATA[>]]> 0
		OR(
			f.height_Price <![CDATA[>]]> e.height_Price
			AND e.height_Price <![CDATA[>]]> d.height_Price
			AND d.height_Price <![CDATA[>]]> c.height_Price
			AND c.height_Price <![CDATA[>]]> b.height_Price
			AND b.height_Price <![CDATA[>]]> a.height_Price
		)
	)
	AND(
		(g.new_Price - g.today_Open) <![CDATA[>]]> 0
		OR(
			g.height_Price <![CDATA[>]]> f.height_Price
			AND f.height_Price <![CDATA[>]]> e.height_Price
			AND e.height_Price <![CDATA[>]]> d.height_Price
			AND d.height_Price <![CDATA[>]]> c.height_Price
			AND c.height_Price <![CDATA[>]]> b.height_Price
			AND b.height_Price <![CDATA[>]]> a.height_Price
		)
	)
  </select>
  
  
  <select id="selectStockRecoverBy01" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
    SELECT
		t.*
	FROM
		t_stock y,
		t_stock t
	WHERE
		y.create_Date = #{lastTradeDate,jdbcType=VARCHAR}
	AND t.create_Date = #{todayTradeDate,jdbcType=VARCHAR}
	and y.`code`=t.`code`
	and t.code_Name not like '%st%'
	and t.today_Open <![CDATA[<]]> t.yeateday_Close
	and t.new_Price <![CDATA[<]]> t.yeateday_Close
	and (
	(t.new_Price <![CDATA[>]]> t.today_Open and (t.today_Open-t.low_Price) <![CDATA[>]]> ((t.new_Price-t.today_Open)*3) and (t.new_Price-t.today_Open) <![CDATA[>]]> ((t.height_Price-t.new_Price)*5))
	OR
	(t.new_Price <![CDATA[<]]> t.today_Open and (t.new_Price-t.low_Price) <![CDATA[>]]> ((t.today_Open-t.new_Price)*3) and (t.today_Open-t.new_Price) <![CDATA[>]]> ((t.height_Price-t.today_Open)*5))
	)
  </select>
  
  
  <select id="selectStockRecoverBy02" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
    SELECT
		t.*
	FROM
		t_stock y,
		t_stock t
	WHERE
		y.create_Date = #{lastTradeDate,jdbcType=VARCHAR}
	AND t.create_Date = #{todayTradeDate,jdbcType=VARCHAR}
	AND y.`code` = t.`code`
	AND t.code_Name NOT LIKE '%st%'
	AND t.today_Open <![CDATA[<]]> t.yeateday_Close
	AND t.new_Price <![CDATA[<]]> t.yeateday_Close
	AND t.today_Open = t.low_Price
	AND t.new_Price <![CDATA[>]]> t.today_Open
	AND t.deal_Vol <![CDATA[>]]> y.deal_Vol
	AND(t.height_Price - t.new_Price) <![CDATA[>]]> ((t.new_Price - t.today_Open) * 2)
  </select>
  
  <select id="selectStockRecoverBy03" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
    SELECT
		t.*
	FROM
		t_stock y,
		t_stock t
	WHERE
		y.create_Date = #{lastTradeDate,jdbcType=VARCHAR}
	AND t.create_Date = #{todayTradeDate,jdbcType=VARCHAR}
	AND y.`code` = t.`code`
	AND t.code_Name NOT LIKE '%st%'
	AND t.new_Price <![CDATA[>]]> y.today_Open
	AND t.new_Price <![CDATA[>]]> y.new_Price
	AND t.deal_Vol <![CDATA[>]]> y.deal_Vol
	AND t.new_Price <![CDATA[>]]> t.today_Open
	AND t.today_Open = t.low_Price
	AND(t.height_Price - t.new_Price) <![CDATA[>]]> ((t.new_Price - t.today_Open) * 2)
	AND(
		(
			y.new_Price <![CDATA[>]]> y.today_Open
			AND(y.today_Open - y.low_Price) <![CDATA[>]]> ((y.new_Price - y.today_Open) * 3)
			AND(y.new_Price - y.today_Open) <![CDATA[>]]> (
				(y.height_Price - y.new_Price)* 5
			)
		)
		OR(
			y.new_Price <![CDATA[<]]> y.today_Open
			AND(y.new_Price - y.low_Price) <![CDATA[>]]> ((y.today_Open - y.new_Price) * 3)
			AND(y.today_Open - y.new_Price) <![CDATA[>]]> (
				(y.height_Price - y.today_Open)* 5
			)
		)
	)
  </select>
  
  <select id="selectStockRecoverBy04" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
    SELECT
		t.*
	FROM
		t_stock y,
		t_stock t
	WHERE
		y.create_Date = #{lastTradeDate,jdbcType=VARCHAR}
	AND t.create_Date = #{todayTradeDate,jdbcType=VARCHAR}
	AND y.`code` = t.`code`
	AND t.code_Name NOT LIKE '%st%'
	AND t.today_Open <![CDATA[<]]> t.yeateday_Close
	AND t.new_Price <![CDATA[<]]> t.yeateday_Close
	AND t.height_Price <![CDATA[<>]]> t.today_Open
	AND t.height_Price <![CDATA[<>]]> t.new_Price
	AND(
		t.today_Open = t.new_Price
		OR(t.today_Open - t.new_Price)= 0.01
		OR(t.new_Price - t.today_Open)= 0.01
	)
	AND t.deal_Vol <![CDATA[>]]> y.deal_Vol
	AND(
		(
			t.new_Price <![CDATA[>=]]> t.today_Open
			AND(t.today_Open - t.low_Price) <![CDATA[>]]> (
				(t.height_Price - t.new_Price)* 3
			)
		)
		OR(
			t.new_Price <![CDATA[<]]> t.today_Open
			AND(t.new_Price - t.low_Price) <![CDATA[>]]> (
				(t.height_Price - t.today_Open)* 3
			)
		)
	)
  </select>
  
  <select id="selectStockRecoverBy05" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
    SELECT
		t.*
	FROM
		t_stock y,
		t_stock t
	WHERE
		y.create_Date = #{lastTradeDate,jdbcType=VARCHAR}
	AND t.create_Date = #{todayTradeDate,jdbcType=VARCHAR}
	AND y.`code` = t.`code`
	AND t.code_Name NOT LIKE '%st%'
	AND y.new_Price <![CDATA[<]]> y.today_Open
	AND t.new_Price <![CDATA[<]]> t.yeateday_Close
	AND t.today_Open <![CDATA[<]]> t.yeateday_Close
	AND t.new_Price <![CDATA[<>]]> t.today_Open
	AND t.deal_Vol <![CDATA[>]]> y.deal_Vol
	AND t.height_Price <![CDATA[>=]]> (
		y.new_Price +(y.today_Open - y.new_Price)/ 2
	)
	AND(
		(
			t.new_Price <![CDATA[>]]> t.today_Open
			AND(t.height_Price - t.new_Price) <![CDATA[>]]> (t.new_Price - t.today_Open)
			AND(t.today_Open - t.low_Price) <![CDATA[>]]> (t.height_Price - t.new_Price)
		)
		OR(
			t.new_Price <![CDATA[<]]> t.today_Open
			AND(t.height_Price - t.today_Open) <![CDATA[>]]> (t.today_Open - t.new_Price)
			AND(t.new_Price - t.low_Price) <![CDATA[>]]> (t.height_Price - t.today_Open)
		)
	)
  </select>
  
  <select id="selectStockRecoverBy06" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
    SELECT
		t.*
	FROM
		t_stock y,
		t_stock t
	WHERE
		y.create_Date = #{lastTradeDate,jdbcType=VARCHAR}
	AND t.create_Date = #{todayTradeDate,jdbcType=VARCHAR}
	AND y.`code` = t.`code`
	AND t.code_Name NOT LIKE '%st%'
	AND y.new_Price <![CDATA[<]]> y.today_Open
	AND y.low_Price <![CDATA[<]]> y.new_Price
	AND t.new_Price <![CDATA[>]]> t.today_Open
	AND t.low_Price <![CDATA[>]]> y.low_Price
	AND t.height_Price <![CDATA[<]]> y.today_Open
	AND t.deal_Vol <![CDATA[<]]> y.deal_Vol
	AND(y.new_Price - y.low_Price) <![CDATA[>]]> (t.new_Price - t.today_Open)
	AND(y.new_Price - y.low_Price) <![CDATA[>]]> (y.height_Price - y.today_Open)
  </select>
  
  <select id="selectStockRecoverBy07" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
    SELECT
		t.*
	FROM
		t_stock y,
		t_stock t
	WHERE
		y.create_Date = #{lastTradeDate,jdbcType=VARCHAR}
	AND t.create_Date = #{todayTradeDate,jdbcType=VARCHAR}
	AND y.`code` = t.`code`
	AND t.code_Name NOT LIKE '%st%'
	AND t.today_Open <![CDATA[<]]> y.low_Price
	AND t.new_Price <![CDATA[>]]> y.height_Price
	AND t.deal_Vol <![CDATA[>]]> (y.deal_Vol * 1.5)
  </select>
  
</mapper>